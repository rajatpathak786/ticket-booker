apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-backend-depl                                   # Sets Name of deployment object
spec:
  replicas: 1                                               # Mentions number of identical pod replicas to run
  selector:
    matchLabels:
      app: auth-backend                                     # Selects the pods with label app: posts-backend which deployment object should manage
  template:                                                 # Provides template for creating new pods
    metadata:
      labels:
        app: auth-backend                                   # Specifies new pod should be created with label app: auth-backend
    spec:                                                   # Provides specification to pod
      containers:                                                
        - name: auth-backend                                # Assings name to container inside pod
          image: rajatpathak/auth-backend                   # Specifies docker image to be used for container

---                                                         # --- is used to write multiple objects in an .yaml file

# Here we'll specify another object cluster IP service to communicate between diff pods

apiVersion: v1
kind: Service
metadata:
  name: auth-backend-srv                                    # Name of service created
spec:                                                       # Provides specifications for the service
  type: ClusterIP                                           # Mentions type of service created here we've created ClusterIP (Here even if we don't provide type k8s will by default create ClusterIP service)
  selector:
    app: auth-backend                                       # selector selects pod with label app: auth-backend and forward request to that
  ports:
    - name: auth-backend                                    # Name of ports attached to service, just for logging purpose [ - mentions array in kubernetes object file, means array of ports ]
      protocol: TCP
      port: 3000                                            # Mentions port to which Service would listen to
      targetPort: 3000                                      # Mentions port of pod which service will send incoming request 